/*
문제 설명
배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 예를 들면,

arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.

배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.

제한사항

배열 arr의 크기 : 1,000,000 이하의 자연수
배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수
입출력 예

arr	                answer
[1,1,3,3,0,1,1]	    [1,3,0,1]
[4,4,4,3,3]	        [4,3]

입출력 예 설명
입출력 예 #1,2
문제의 예시와 같습니다.
*/

function solution(arr)
{
    var answer = [];

    answer.push(arr[0]);
    // arr 순회
    for(let i=1;i<arr.length;i++){
        // 현재 숫자가 마지막 넣은 숫자와 다르면 push
        if(answer[answer.length -1] !== arr[i]){
            answer.push(arr[i]);
        }
    }
    
    // 숫자 배열을 반환
    return answer;
}

/*
초기 설정:
빈 배열 answer를 생성합니다. 이 배열은 중복되지 않은 숫자들을 저장합니다.
arr 배열의 첫 번째 숫자를 answer 배열에 추가합니다.

중복 여부 확인:
for 루프를 실행하여 arr 배열을 순회합니다. 인덱스 i는 1부터 시작합니다.
현재 숫자가 answer 배열의 마지막 요소와 다를 경우에만 중복되지 않은 숫자로 간주합니다.
따라서, 현재 숫자가 마지막으로 추가된 숫자와 다르면 answer 배열에 해당 숫자를 추가합니다.

결과 반환:
모든 숫자에 대해 반복한 후, 중복되지 않은 숫자들로 이루어진 answer 배열을 반환합니다.
*/