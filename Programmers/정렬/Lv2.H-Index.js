/*
문제 설명
H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다.

어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h의 최댓값이 이 과학자의 H-Index입니다.

어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.

제한사항
- 과학자가 발표한 논문의 수는 1편 이상 1,000편 이하입니다.
- 논문별 인용 횟수는 0회 이상 10,000회 이하입니다.

입출력 예
citations	    return
[3,0,6,1,5]	    3

입출력 예 설명
이 과학자가 발표한 논문의 수는 5편이고, 그중 3편의 논문은 3회 이상 인용되었습니다. 그리고 나머지 2편의 논문은 3회 이하 인용되었기 때문에 이 과학자의 H-Index는 3입니다.
*/

// 방법 1
function solution(citations) {
    var answer = 0;
    // 과학자가 발표한 논문의 인용 횟수(citations)를 내림차순 정렬
    const citationsCount = citations.sort((a,b) => b-a);
    
    for(let i=0;i<citations.length;i++){
        // 인용 횟수가 많은 논문부터 카운트, 논문의 갯수와 모든 논문의 최소 인용 횟수가 최댓값이 되는 값을 찾는다
        if((i+1) <= citationsCount[i]){
            answer++;
        } else {
            break;
        }
    }
    // 찾은 최댓값을 H-Index(answer)로 반환
    return answer;
}

/*
내림차순 정렬:
citations 배열을 내림차순으로 정렬합니다. 이를 위해 sort 메소드에 콜백 함수를 전달하여 정렬 기준을 설정합니다.
정렬된 결과는 citationsCount 변수에 할당됩니다.

H-Index 계산:
반복문을 통해 인용 횟수가 많은 논문부터 카운트를 진행합니다.
현재 논문의 인용 횟수가 (인덱스 + 1)보다 크거나 같다면, 해당 논문은 H-Index에 포함됩니다. 따라서 answer 값을 증가시킵니다.
그렇지 않다면, 더 이상 H-Index에 포함될 수 없으므로 반복문을 종료합니다.

H-Index 반환:
찾은 H-Index 값을 answer로 반환합니다.

인용 횟수를 기준으로 내림차순 정렬한 뒤, 반복문을 통해 H-Index를 계산합니다. 최소 인용 횟수가 논문의 갯수와 같거나 큰 논문의 수를 세어서 H-Index 값을 구합니다. 계산된 H-Index 값을 반환합니다.
*/

/*
먼저, citations 배열을 내림차순으로 정렬합니다. 이렇게 하면 논문의 인용 횟수가 많은 순서대로 정렬됩니다.

그리고 answer 변수를 초기화하고, for 루프를 사용하여 논문의 인용 횟수를 카운트하면서 H-Index를 찾습니다.

루프에서는 인덱스 i를 기준으로 논문의 인용 횟수와 citationsCount[i]를 비교합니다. citationsCount[i]는 인용 횟수가 많은 순서대로 정렬된 배열의 i번째 원소로, 해당 값은 i번 이상 인용된 논문의 개수를 의미합니다.

따라서 i+1은 i번 이상 인용된 논문의 개수를 나타냅니다. 만약 i+1이 citationsCount[i]보다 작거나 같으면, 즉, i번 이상 인용된 논문의 개수가 i번 이상이면, H-Index를 1 증가시킵니다.

그렇지 않으면 H-Index를 찾은 것이므로 더 이상 for 루프를 진행할 필요가 없으므로 루프를 중단하고, answer를 반환하여 H-Index를 구합니다.
*/

